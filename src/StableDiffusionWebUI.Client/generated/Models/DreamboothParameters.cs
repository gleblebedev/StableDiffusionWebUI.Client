// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    /// <summary> DreamboothParameters. </summary>
    public partial class DreamboothParameters
    {
        /// <summary> Initializes a new instance of DreamboothParameters. </summary>
        /// <param name="dbPretrainedModelNameOrPath"> Db Pretrained Model Name Or Path. </param>
        /// <param name="dbInstanceDataDir"> Db Instance Data Dir. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dbPretrainedModelNameOrPath"/> or <paramref name="dbInstanceDataDir"/> is null. </exception>
        public DreamboothParameters(string dbPretrainedModelNameOrPath, string dbInstanceDataDir)
        {
            Argument.AssertNotNull(dbPretrainedModelNameOrPath, nameof(dbPretrainedModelNameOrPath));
            Argument.AssertNotNull(dbInstanceDataDir, nameof(dbInstanceDataDir));

            DbPretrainedModelNameOrPath = dbPretrainedModelNameOrPath;
            DbInstanceDataDir = dbInstanceDataDir;
        }

        /// <summary> Db Pretrained Model Name Or Path. </summary>
        public string DbPretrainedModelNameOrPath { get; }
        /// <summary> Db Pretrained Vae Name Or Path. </summary>
        public string DbPretrainedVaeNameOrPath { get; set; }
        /// <summary> Db Instance Data Dir. </summary>
        public string DbInstanceDataDir { get; }
        /// <summary> Db Class Data Dir. </summary>
        public string DbClassDataDir { get; set; }
        /// <summary> Db Instance Prompt. </summary>
        public string DbInstancePrompt { get; set; }
        /// <summary> Db Class Prompt. </summary>
        public string DbClassPrompt { get; set; }
        /// <summary> Db Save Sample Prompt. </summary>
        public string DbSaveSamplePrompt { get; set; }
        /// <summary> Db Save Sample Negative Prompt. </summary>
        public string DbSaveSampleNegativePrompt { get; set; }
        /// <summary> Db N Save Sample. </summary>
        public int? DbNSaveSample { get; set; }
        /// <summary> Db Seed. </summary>
        public int? DbSeed { get; set; }
        /// <summary> Db Save Guidance Scale. </summary>
        public float? DbSaveGuidanceScale { get; set; }
        /// <summary> Db Save Infer Steps. </summary>
        public int? DbSaveInferSteps { get; set; }
        /// <summary> Db Num Class Images. </summary>
        public int? DbNumClassImages { get; set; }
        /// <summary> Db Resolution. </summary>
        public int? DbResolution { get; set; }
        /// <summary> Db Center Crop. </summary>
        public bool? DbCenterCrop { get; set; }
        /// <summary> Db Train Text Encoder. </summary>
        public bool? DbTrainTextEncoder { get; set; }
        /// <summary> Db Train Batch Size. </summary>
        public int? DbTrainBatchSize { get; set; }
        /// <summary> Db Sample Batch Size. </summary>
        public int? DbSampleBatchSize { get; set; }
        /// <summary> Db Num Train Epochs. </summary>
        public int? DbNumTrainEpochs { get; set; }
        /// <summary> Db Max Train Steps. </summary>
        public int? DbMaxTrainSteps { get; set; }
        /// <summary> Db Gradient Accumulation Steps. </summary>
        public int? DbGradientAccumulationSteps { get; set; }
        /// <summary> Db Gradient Checkpointing. </summary>
        public bool? DbGradientCheckpointing { get; set; }
        /// <summary> Db Learning Rate. </summary>
        public float? DbLearningRate { get; set; }
        /// <summary> Db Scale Lr. </summary>
        public bool? DbScaleLr { get; set; }
        /// <summary> Db Lr Scheduler. </summary>
        public string DbLrScheduler { get; set; }
        /// <summary> Db Lr Warmup Steps. </summary>
        public int? DbLrWarmupSteps { get; set; }
        /// <summary> Db Use 8Bit Adam. </summary>
        public bool? DbUse8BitAdam { get; set; }
        /// <summary> Db Adam Beta1. </summary>
        public float? DbAdamBeta1 { get; set; }
        /// <summary> Db Adam Beta2. </summary>
        public float? DbAdamBeta2 { get; set; }
        /// <summary> Db Adam Weight Decay. </summary>
        public float? DbAdamWeightDecay { get; set; }
        /// <summary> Db Adam Epsilon. </summary>
        public float? DbAdamEpsilon { get; set; }
        /// <summary> Db Max Grad Norm. </summary>
        public int? DbMaxGradNorm { get; set; }
        /// <summary> Db Save Preview Every. </summary>
        public int? DbSavePreviewEvery { get; set; }
        /// <summary> Db Save Embedding Every. </summary>
        public int? DbSaveEmbeddingEvery { get; set; }
        /// <summary> Db Mixed Precision. </summary>
        public string DbMixedPrecision { get; set; }
        /// <summary> Db Not Cache Latents. </summary>
        public bool? DbNotCacheLatents { get; set; }
        /// <summary> Db Concepts List. </summary>
        public string DbConceptsList { get; set; }
        /// <summary> Db Use Cpu. </summary>
        public bool? DbUseCpu { get; set; }
        /// <summary> Db Pad Tokens. </summary>
        public bool? DbPadTokens { get; set; }
        /// <summary> Db Max Token Length. </summary>
        public int? DbMaxTokenLength { get; set; }
        /// <summary> Db Hflip. </summary>
        public bool? DbHflip { get; set; }
        /// <summary> Db Use Ema. </summary>
        public bool? DbUseEma { get; set; }
        /// <summary> Db Class Negative Prompt. </summary>
        public string DbClassNegativePrompt { get; set; }
        /// <summary> Db Class Guidance Scale. </summary>
        public float? DbClassGuidanceScale { get; set; }
        /// <summary> Db Class Infer Steps. </summary>
        public int? DbClassInferSteps { get; set; }
    }
}
