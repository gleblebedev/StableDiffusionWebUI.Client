// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    public partial class DreamboothParameters : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("db_pretrained_model_name_or_path");
            writer.WriteStringValue(DbPretrainedModelNameOrPath);
            if (Optional.IsDefined(DbPretrainedVaeNameOrPath))
            {
                writer.WritePropertyName("db_pretrained_vae_name_or_path");
                writer.WriteStringValue(DbPretrainedVaeNameOrPath);
            }
            writer.WritePropertyName("db_instance_data_dir");
            writer.WriteStringValue(DbInstanceDataDir);
            if (Optional.IsDefined(DbClassDataDir))
            {
                writer.WritePropertyName("db_class_data_dir");
                writer.WriteStringValue(DbClassDataDir);
            }
            if (Optional.IsDefined(DbInstancePrompt))
            {
                writer.WritePropertyName("db_instance_prompt");
                writer.WriteStringValue(DbInstancePrompt);
            }
            if (Optional.IsDefined(DbClassPrompt))
            {
                writer.WritePropertyName("db_class_prompt");
                writer.WriteStringValue(DbClassPrompt);
            }
            if (Optional.IsDefined(DbSaveSamplePrompt))
            {
                writer.WritePropertyName("db_save_sample_prompt");
                writer.WriteStringValue(DbSaveSamplePrompt);
            }
            if (Optional.IsDefined(DbSaveSampleNegativePrompt))
            {
                writer.WritePropertyName("db_save_sample_negative_prompt");
                writer.WriteStringValue(DbSaveSampleNegativePrompt);
            }
            if (Optional.IsDefined(DbNSaveSample))
            {
                writer.WritePropertyName("db_n_save_sample");
                writer.WriteNumberValue(DbNSaveSample.Value);
            }
            if (Optional.IsDefined(DbSeed))
            {
                writer.WritePropertyName("db_seed");
                writer.WriteNumberValue(DbSeed.Value);
            }
            if (Optional.IsDefined(DbSaveGuidanceScale))
            {
                writer.WritePropertyName("db_save_guidance_scale");
                writer.WriteNumberValue(DbSaveGuidanceScale.Value);
            }
            if (Optional.IsDefined(DbSaveInferSteps))
            {
                writer.WritePropertyName("db_save_infer_steps");
                writer.WriteNumberValue(DbSaveInferSteps.Value);
            }
            if (Optional.IsDefined(DbNumClassImages))
            {
                writer.WritePropertyName("db_num_class_images");
                writer.WriteNumberValue(DbNumClassImages.Value);
            }
            if (Optional.IsDefined(DbResolution))
            {
                writer.WritePropertyName("db_resolution");
                writer.WriteNumberValue(DbResolution.Value);
            }
            if (Optional.IsDefined(DbCenterCrop))
            {
                writer.WritePropertyName("db_center_crop");
                writer.WriteBooleanValue(DbCenterCrop.Value);
            }
            if (Optional.IsDefined(DbTrainTextEncoder))
            {
                writer.WritePropertyName("db_train_text_encoder");
                writer.WriteBooleanValue(DbTrainTextEncoder.Value);
            }
            if (Optional.IsDefined(DbTrainBatchSize))
            {
                writer.WritePropertyName("db_train_batch_size");
                writer.WriteNumberValue(DbTrainBatchSize.Value);
            }
            if (Optional.IsDefined(DbSampleBatchSize))
            {
                writer.WritePropertyName("db_sample_batch_size");
                writer.WriteNumberValue(DbSampleBatchSize.Value);
            }
            if (Optional.IsDefined(DbNumTrainEpochs))
            {
                writer.WritePropertyName("db_num_train_epochs");
                writer.WriteNumberValue(DbNumTrainEpochs.Value);
            }
            if (Optional.IsDefined(DbMaxTrainSteps))
            {
                writer.WritePropertyName("db_max_train_steps");
                writer.WriteNumberValue(DbMaxTrainSteps.Value);
            }
            if (Optional.IsDefined(DbGradientAccumulationSteps))
            {
                writer.WritePropertyName("db_gradient_accumulation_steps");
                writer.WriteNumberValue(DbGradientAccumulationSteps.Value);
            }
            if (Optional.IsDefined(DbGradientCheckpointing))
            {
                writer.WritePropertyName("db_gradient_checkpointing");
                writer.WriteBooleanValue(DbGradientCheckpointing.Value);
            }
            if (Optional.IsDefined(DbLearningRate))
            {
                writer.WritePropertyName("db_learning_rate");
                writer.WriteNumberValue(DbLearningRate.Value);
            }
            if (Optional.IsDefined(DbScaleLr))
            {
                writer.WritePropertyName("db_scale_lr");
                writer.WriteBooleanValue(DbScaleLr.Value);
            }
            if (Optional.IsDefined(DbLrScheduler))
            {
                writer.WritePropertyName("db_lr_scheduler");
                writer.WriteStringValue(DbLrScheduler);
            }
            if (Optional.IsDefined(DbLrWarmupSteps))
            {
                writer.WritePropertyName("db_lr_warmup_steps");
                writer.WriteNumberValue(DbLrWarmupSteps.Value);
            }
            if (Optional.IsDefined(DbUse8BitAdam))
            {
                writer.WritePropertyName("db_use_8bit_adam");
                writer.WriteBooleanValue(DbUse8BitAdam.Value);
            }
            if (Optional.IsDefined(DbAdamBeta1))
            {
                writer.WritePropertyName("db_adam_beta1");
                writer.WriteNumberValue(DbAdamBeta1.Value);
            }
            if (Optional.IsDefined(DbAdamBeta2))
            {
                writer.WritePropertyName("db_adam_beta2");
                writer.WriteNumberValue(DbAdamBeta2.Value);
            }
            if (Optional.IsDefined(DbAdamWeightDecay))
            {
                writer.WritePropertyName("db_adam_weight_decay");
                writer.WriteNumberValue(DbAdamWeightDecay.Value);
            }
            if (Optional.IsDefined(DbAdamEpsilon))
            {
                writer.WritePropertyName("db_adam_epsilon");
                writer.WriteNumberValue(DbAdamEpsilon.Value);
            }
            if (Optional.IsDefined(DbMaxGradNorm))
            {
                writer.WritePropertyName("db_max_grad_norm");
                writer.WriteNumberValue(DbMaxGradNorm.Value);
            }
            if (Optional.IsDefined(DbSavePreviewEvery))
            {
                writer.WritePropertyName("db_save_preview_every");
                writer.WriteNumberValue(DbSavePreviewEvery.Value);
            }
            if (Optional.IsDefined(DbSaveEmbeddingEvery))
            {
                writer.WritePropertyName("db_save_embedding_every");
                writer.WriteNumberValue(DbSaveEmbeddingEvery.Value);
            }
            if (Optional.IsDefined(DbMixedPrecision))
            {
                writer.WritePropertyName("db_mixed_precision");
                writer.WriteStringValue(DbMixedPrecision);
            }
            if (Optional.IsDefined(DbNotCacheLatents))
            {
                writer.WritePropertyName("db_not_cache_latents");
                writer.WriteBooleanValue(DbNotCacheLatents.Value);
            }
            if (Optional.IsDefined(DbConceptsList))
            {
                writer.WritePropertyName("db_concepts_list");
                writer.WriteStringValue(DbConceptsList);
            }
            if (Optional.IsDefined(DbUseCpu))
            {
                writer.WritePropertyName("db_use_cpu");
                writer.WriteBooleanValue(DbUseCpu.Value);
            }
            if (Optional.IsDefined(DbPadTokens))
            {
                writer.WritePropertyName("db_pad_tokens");
                writer.WriteBooleanValue(DbPadTokens.Value);
            }
            if (Optional.IsDefined(DbMaxTokenLength))
            {
                writer.WritePropertyName("db_max_token_length");
                writer.WriteNumberValue(DbMaxTokenLength.Value);
            }
            if (Optional.IsDefined(DbHflip))
            {
                writer.WritePropertyName("db_hflip");
                writer.WriteBooleanValue(DbHflip.Value);
            }
            if (Optional.IsDefined(DbUseEma))
            {
                writer.WritePropertyName("db_use_ema");
                writer.WriteBooleanValue(DbUseEma.Value);
            }
            if (Optional.IsDefined(DbClassNegativePrompt))
            {
                writer.WritePropertyName("db_class_negative_prompt");
                writer.WriteStringValue(DbClassNegativePrompt);
            }
            if (Optional.IsDefined(DbClassGuidanceScale))
            {
                writer.WritePropertyName("db_class_guidance_scale");
                writer.WriteNumberValue(DbClassGuidanceScale.Value);
            }
            if (Optional.IsDefined(DbClassInferSteps))
            {
                writer.WritePropertyName("db_class_infer_steps");
                writer.WriteNumberValue(DbClassInferSteps.Value);
            }
            writer.WriteEndObject();
        }
    }
}
