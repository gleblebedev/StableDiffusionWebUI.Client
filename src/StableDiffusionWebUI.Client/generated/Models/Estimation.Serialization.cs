// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    public partial class Estimation
    {
        internal static Estimation DeserializeEstimation(JsonElement element)
        {
            Optional<string> msg = default;
            Optional<int> rank = default;
            int queueSize = default;
            Optional<float> avgEventProcessTime = default;
            Optional<float> avgEventConcurrentProcessTime = default;
            Optional<int> rankEta = default;
            int queueEta = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("msg"))
                {
                    msg = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rank"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rank = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("queue_size"))
                {
                    queueSize = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("avg_event_process_time"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    avgEventProcessTime = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("avg_event_concurrent_process_time"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    avgEventConcurrentProcessTime = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("rank_eta"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rankEta = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("queue_eta"))
                {
                    queueEta = property.Value.GetInt32();
                    continue;
                }
            }
            return new Estimation(msg.Value, Optional.ToNullable(rank), queueSize, Optional.ToNullable(avgEventProcessTime), Optional.ToNullable(avgEventConcurrentProcessTime), Optional.ToNullable(rankEta), queueEta);
        }
    }
}
