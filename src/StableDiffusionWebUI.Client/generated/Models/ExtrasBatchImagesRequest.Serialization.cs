// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    public partial class ExtrasBatchImagesRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ResizeMode))
            {
                writer.WritePropertyName("resize_mode");
                writer.WriteStringValue(ResizeMode.Value.ToString());
            }
            if (Optional.IsDefined(ShowExtrasResults))
            {
                writer.WritePropertyName("show_extras_results");
                writer.WriteBooleanValue(ShowExtrasResults.Value);
            }
            if (Optional.IsDefined(GfpganVisibility))
            {
                writer.WritePropertyName("gfpgan_visibility");
                writer.WriteNumberValue(GfpganVisibility.Value);
            }
            if (Optional.IsDefined(CodeformerVisibility))
            {
                writer.WritePropertyName("codeformer_visibility");
                writer.WriteNumberValue(CodeformerVisibility.Value);
            }
            if (Optional.IsDefined(CodeformerWeight))
            {
                writer.WritePropertyName("codeformer_weight");
                writer.WriteNumberValue(CodeformerWeight.Value);
            }
            if (Optional.IsDefined(UpscalingResize))
            {
                writer.WritePropertyName("upscaling_resize");
                writer.WriteNumberValue(UpscalingResize.Value);
            }
            if (Optional.IsDefined(UpscalingResizeW))
            {
                writer.WritePropertyName("upscaling_resize_w");
                writer.WriteNumberValue(UpscalingResizeW.Value);
            }
            if (Optional.IsDefined(UpscalingResizeH))
            {
                writer.WritePropertyName("upscaling_resize_h");
                writer.WriteNumberValue(UpscalingResizeH.Value);
            }
            if (Optional.IsDefined(UpscalingCrop))
            {
                writer.WritePropertyName("upscaling_crop");
                writer.WriteBooleanValue(UpscalingCrop.Value);
            }
            if (Optional.IsDefined(Upscaler1))
            {
                writer.WritePropertyName("upscaler_1");
                writer.WriteStringValue(Upscaler1);
            }
            if (Optional.IsDefined(Upscaler2))
            {
                writer.WritePropertyName("upscaler_2");
                writer.WriteStringValue(Upscaler2);
            }
            if (Optional.IsDefined(ExtrasUpscaler2Visibility))
            {
                writer.WritePropertyName("extras_upscaler_2_visibility");
                writer.WriteNumberValue(ExtrasUpscaler2Visibility.Value);
            }
            if (Optional.IsDefined(UpscaleFirst))
            {
                writer.WritePropertyName("upscale_first");
                writer.WriteBooleanValue(UpscaleFirst.Value);
            }
            writer.WritePropertyName("imageList");
            writer.WriteStartArray();
            foreach (var item in ImageList)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }
    }
}
