// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    /// <summary> StableDiffusionProcessingTxt2Img. </summary>
    public partial class StableDiffusionProcessingTxt2Img
    {
        /// <summary> Initializes a new instance of StableDiffusionProcessingTxt2Img. </summary>
        public StableDiffusionProcessingTxt2Img()
        {
            Styles = new ChangeTrackingList<string>();
        }

        /// <summary> Enable Hr. </summary>
        public bool? EnableHr { get; set; }
        /// <summary> Denoising Strength. </summary>
        public float? DenoisingStrength { get; set; }
        /// <summary> Firstphase Width. </summary>
        public int? FirstphaseWidth { get; set; }
        /// <summary> Firstphase Height. </summary>
        public int? FirstphaseHeight { get; set; }
        /// <summary> Prompt. </summary>
        public string Prompt { get; set; }
        /// <summary> Styles. </summary>
        public IList<string> Styles { get; }
        /// <summary> Seed. </summary>
        public int? Seed { get; set; }
        /// <summary> Subseed. </summary>
        public int? Subseed { get; set; }
        /// <summary> Subseed Strength. </summary>
        public float? SubseedStrength { get; set; }
        /// <summary> Seed Resize From H. </summary>
        public int? SeedResizeFromH { get; set; }
        /// <summary> Seed Resize From W. </summary>
        public int? SeedResizeFromW { get; set; }
        /// <summary> Sampler Name. </summary>
        public string SamplerName { get; set; }
        /// <summary> Batch Size. </summary>
        public int? BatchSize { get; set; }
        /// <summary> N Iter. </summary>
        public int? NIter { get; set; }
        /// <summary> Steps. </summary>
        public int? Steps { get; set; }
        /// <summary> Cfg Scale. </summary>
        public float? CfgScale { get; set; }
        /// <summary> Width. </summary>
        public int? Width { get; set; }
        /// <summary> Height. </summary>
        public int? Height { get; set; }
        /// <summary> Restore Faces. </summary>
        public bool? RestoreFaces { get; set; }
        /// <summary> Tiling. </summary>
        public bool? Tiling { get; set; }
        /// <summary> Negative Prompt. </summary>
        public string NegativePrompt { get; set; }
        /// <summary> Eta. </summary>
        public float? Eta { get; set; }
        /// <summary> S Churn. </summary>
        public float? SChurn { get; set; }
        /// <summary> S Tmax. </summary>
        public float? STmax { get; set; }
        /// <summary> S Tmin. </summary>
        public float? STmin { get; set; }
        /// <summary> S Noise. </summary>
        public float? SNoise { get; set; }
        /// <summary> Override Settings. </summary>
        public object OverrideSettings { get; set; }
        /// <summary> Sampler Index. </summary>
        public string SamplerIndex { get; set; }
    }
}
