// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace StableDiffusionWebUI.Client.Models
{
    /// <summary> ExtrasSingleImageRequest. </summary>
    public partial class ExtrasSingleImageRequest
    {
        /// <summary> Initializes a new instance of ExtrasSingleImageRequest. </summary>
        public ExtrasSingleImageRequest()
        {
        }

        /// <summary> Sets the resize mode: 0 to upscale by upscaling_resize amount, 1 to upscale up to upscaling_resize_h x upscaling_resize_w. </summary>
        public ExtrasSingleImageRequestResizeMode? ResizeMode { get; set; }
        /// <summary> Should the backend return the generated image?. </summary>
        public bool? ShowExtrasResults { get; set; }
        /// <summary> Sets the visibility of GFPGAN, values should be between 0 and 1. </summary>
        public float? GfpganVisibility { get; set; }
        /// <summary> Sets the visibility of CodeFormer, values should be between 0 and 1. </summary>
        public float? CodeformerVisibility { get; set; }
        /// <summary> Sets the weight of CodeFormer, values should be between 0 and 1. </summary>
        public float? CodeformerWeight { get; set; }
        /// <summary> By how much to upscale the image, only used when resize_mode=0. </summary>
        public float? UpscalingResize { get; set; }
        /// <summary> Target width for the upscaler to hit. Only used when resize_mode=1. </summary>
        public int? UpscalingResizeW { get; set; }
        /// <summary> Target height for the upscaler to hit. Only used when resize_mode=1. </summary>
        public int? UpscalingResizeH { get; set; }
        /// <summary> Should the upscaler crop the image to fit in the choosen size?. </summary>
        public bool? UpscalingCrop { get; set; }
        /// <summary> The name of the main upscaler to use, it has to be one of this list: None , Lanczos , Nearest , LDSR , ESRGAN_4x , ScuNET GAN , ScuNET PSNR , SwinIR 4x. </summary>
        public string Upscaler1 { get; set; }
        /// <summary> The name of the secondary upscaler to use, it has to be one of this list: None , Lanczos , Nearest , LDSR , ESRGAN_4x , ScuNET GAN , ScuNET PSNR , SwinIR 4x. </summary>
        public string Upscaler2 { get; set; }
        /// <summary> Sets the visibility of secondary upscaler, values should be between 0 and 1. </summary>
        public float? ExtrasUpscaler2Visibility { get; set; }
        /// <summary> Should the upscaler run before restoring faces?. </summary>
        public bool? UpscaleFirst { get; set; }
        /// <summary> Image to work on, must be a Base64 string containing the image&apos;s data. </summary>
        public string Image { get; set; }
    }
}
