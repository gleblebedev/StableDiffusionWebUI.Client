// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace StableDiffusionWebUI.Client.Models
{
    /// <summary> SamplerItem. </summary>
    public partial class SamplerItem
    {
        /// <summary> Initializes a new instance of SamplerItem. </summary>
        /// <param name="name"> Name. </param>
        /// <param name="aliases"> Aliases. </param>
        /// <param name="options"> Options. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="aliases"/> or <paramref name="options"/> is null. </exception>
        internal SamplerItem(string name, IEnumerable<string> aliases, IReadOnlyDictionary<string, string> options)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(aliases, nameof(aliases));
            Argument.AssertNotNull(options, nameof(options));

            Name = name;
            Aliases = aliases.ToList();
            Options = options;
        }

        /// <summary> Initializes a new instance of SamplerItem. </summary>
        /// <param name="name"> Name. </param>
        /// <param name="aliases"> Aliases. </param>
        /// <param name="options"> Options. </param>
        internal SamplerItem(string name, IReadOnlyList<string> aliases, IReadOnlyDictionary<string, string> options)
        {
            Name = name;
            Aliases = aliases;
            Options = options;
        }

        /// <summary> Name. </summary>
        public string Name { get; }
        /// <summary> Aliases. </summary>
        public IReadOnlyList<string> Aliases { get; }
        /// <summary> Options. </summary>
        public IReadOnlyDictionary<string, string> Options { get; }
    }
}
